{"version":3,"file":"static/js/423.29dfc40a.chunk.js","mappings":"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","sources":["services/usersApi.js","services/storageApi.js","components/Dropdown/Dropdown.styled.js","components/Dropdown/Dropdown.jsx","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.jsx","components/TweetCardsList/TweetCardsList.styled.js","components/TweetCardsList/TweetCardsList.jsx","components/LoadMoreButton/LoadMoreButton.styled.js","components/LoadMoreButton/LoadMoreButton.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://6479ecbfa455e257fa64114e.mockapi.io';\n\nexport async function fetchUsers(page = 1) {\n  const response = await axios.get(`/users?page=${page}&limit=3`);\n  return response.data;\n}\n\nexport async function fetchUsersLength() {\n  const response = await axios.get(`/users`);\n  return response.data.length;\n}\n\nexport async function updateFollowers(id, followers) {\n  const response = await axios.put(`/users/${id}`, followers);\n  return response.data;\n}\n","export const saveToStorage = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  \n  export const getFromStorage = (key) => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 15px;\n`;\n\nexport const Select = styled.select`\n  appearance: none;\n  text-align: left;\n  background-color: transparent;\n  border: none;\n  padding: 0 1em 0 0;\n  margin: 0;\n  width: 120px;\n  height: 30px;\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 20px;\n  color: #471ca9;\n  cursor: pointer;\n`;\n","import { Container, Select, Text } from \"./Dropdown.styled\";\n\nconst Dropdown = ({onChange}) => {\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n  return (\n    <Container>\n      <Text>Filter tweets: </Text>\n      <Select name=\"filter\" onChange={handleChange}>\n        <option value=\"Show all\">Show all</option>\n        <option value=\"Follow\">Follow</option>\n        <option value=\"Following\">Following</option>\n      </Select>\n    </Container>\n  );\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  height: 460px;\n  width: 380px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 284px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 26px;\n  background-image: url('images/picture.png'), url('images/logo.png');\n  background-position: top 28px left 36px, top 20px left 20px;\n  background-repeat: no-repeat, no-repeat;\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 380px;\n    height: 8px;\n    left: 0;\n    top: 214px;\n    background: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n  width: 80px;\n  height: 80px;\n  left: 150px;\n  top: 178px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  width: 62px;\n  height: 62px;\n  background-color: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  text-transform: uppercase;\n  font-size: 20px;\n  font-weight: 500;\n  color: #ebd8ff;\n  line-height: 1.21;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50px;\n  width: 196px;\n  border: none;\n  border-radius: 10.31px;\n  padding: 14px 28px;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  color: #373737;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &.isFollowing {\n    background-color: #5cd3a8;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  }\n`;\n","import { getFromStorage } from 'services/storageApi';\nimport {\n  Item,\n  Container,\n  AvatarWrapper,\n  Avatar,\n  TextContainer,\n  Text,\n  Button,\n} from './TweetCard.styled';\n\nconst TweetCard = ({ id, tweets, followers, imageUrl, onClick }) => {\n  const isFollowing = getFromStorage(`tweet_${id}`);\n\n  const handleClick = () => {\n    onClick(id, isFollowing);\n  };\n\n  return (\n    <Item>\n      <Container>\n        <AvatarWrapper>\n          <Avatar src={imageUrl} />\n        </AvatarWrapper>\n        <TextContainer>\n          <Text>{tweets.toLocaleString('en-IN')} tweets</Text>\n          <Text>{followers.toLocaleString('en-IN')} followers</Text>\n        </TextContainer>\n        <Button\n          className={isFollowing ? 'isFollowing' : ''}\n          onClick={handleClick}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </Button>\n      </Container>\n    </Item>\n  );\n};\n\nexport default TweetCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: calc(380px * 3 + 48px * 2);\n  padding-left: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 48px;\n`;\n","import TweetCard from 'components/TweetCard/TweetCard';\nimport { List } from './TweetCardsList.styled';\n\nconst TweetCardsList = ({ users, onClick }) => {\n  return (\n    <List>\n      {users.map(({ id, tweets, followers, avatar }) => (\n        <TweetCard\n          key={id}\n          id={id}\n          tweets={tweets}\n          followers={followers}\n          imageUrl={avatar}\n          onClick={onClick}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default TweetCardsList;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: block;\n  margin: 30px auto;\n  font-size: 20px;\n  font-weight: 600;\n  color: #5cd3a8;\n  text-transform: uppercase;\n  border: none;\n  background-color: transparent;\n  width: 230px;\n  height: 40px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n  }\n`;\n\n\n","import { Button } from \"./LoadMoreButton.styled\";\n\nconst LoadMoreButton = ({onClick}) => {\n  return <Button onClick={onClick}>Load more tweets</Button>;\n};\n\nexport default LoadMoreButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Wrapper>\n      <RotatingLines\n        strokeColor=\"#5cd3a8\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"80\"\n        visible={true}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const NavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n","import { FiArrowLeft } from 'react-icons/fi';\nimport { NavLink } from './BackButton.styled';\n\nconst BackButton = () => {\n  return (\n    <NavLink to={'/'}>\n        <FiArrowLeft\n          style={{\n            width: '24px',\n            height: '24px',\n            color: '#471ca9',\n          }}\n        />\n        Go back\n    </NavLink>\n  );\n};\n\nexport default BackButton;\n","import { useEffect, useState } from 'react';\nimport * as API from 'services/usersApi';\nimport { saveToStorage, getFromStorage } from 'services/storageApi';\nimport Dropdown from 'components/Dropdown';\nimport TweetCardsList from 'components/TweetCardsList';\nimport LoadMoreButton from 'components/LoadMoreButton';\nimport Loader from 'components/Loader';\nimport BackButton from 'components/BackButton';\n\nexport default function Tweets() {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('');\n  const [isLoadMoreVisible, setLoadMoreVisible] = useState(false);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setLoading(true);\n        setLoadMoreVisible(false);\n        const fetchedUsers = await API.fetchUsers(page);\n        const usersLength = await API.fetchUsersLength();\n        setUsers(prevState => [...prevState, ...fetchedUsers]);\n        if (usersLength / page <= 3) {\n          setLoadMoreVisible(false);\n        } else {\n          setLoadMoreVisible(true);\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, [page]);\n\n  const handleOnFollowClick = (userId, isFollowing) => {\n    const updatedUsers = users.map(user => {\n      if (user.id === userId) {\n        const updatedUser = {\n          ...user,\n          followers: user.followers + (isFollowing ? -1 : 1),\n        };\n        API.updateFollowers(user.id, { followers: updatedUser.followers });\n        return updatedUser;\n      }\n      return user;\n    });\n    setUsers(updatedUsers);\n    saveToStorage(`tweet_${userId}`, isFollowing ? false : true);\n  };\n\n  const handleOnLoadMoreClick = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handleSelectChange = value => {\n    setFilter(value);\n  };\n\n  const filterUsers = () => {\n    switch (filter) {\n      case 'Show all':\n        return users;\n      case 'Follow':\n        return users.filter(\n          user => getFromStorage(`tweet_${user.id}`) !== true\n        );\n      case 'Following':\n        return users.filter(\n          user => getFromStorage(`tweet_${user.id}`) === true\n        );\n      default:\n        return users;\n    }\n  };\n  const filteredUsers = filterUsers();\n\n  return (\n    <>\n      <BackButton />\n      <Dropdown onChange={handleSelectChange} />\n      {filteredUsers.length > 0 && (\n        <TweetCardsList users={filteredUsers} onClick={handleOnFollowClick} />\n      )}\n      {filteredUsers.length <= 0 && !isLoading && (\n        <p>There are no tweets to show</p>\n      )}\n      {isLoading && <Loader />}\n      {error && <h2>{error}</h2>}\n      {isLoadMoreVisible && filteredUsers.length > 0 && (\n        <LoadMoreButton onClick={handleOnLoadMoreClick} disabled={isLoading} />\n      )}\n    </>\n  );\n}\n"],"names":["fetchUsers","page","axios","response","data","fetchUsersLength","length","id","followers","getFromStorage","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","Container","styled","Text","Select","onChange","name","e","target","value","Item","AvatarWrapper","Avatar","TextContainer","Button","tweets","imageUrl","onClick","isFollowing","src","toLocaleString","className","List","users","map","avatar","Wrapper","strokeColor","strokeWidth","animationDuration","width","visible","NavLink","Link","to","style","height","color","Tweets","useState","setUsers","setPage","isLoading","setLoading","setError","filter","setFilter","isLoadMoreVisible","setLoadMoreVisible","useEffect","API","fetchedUsers","usersLength","prevState","filteredUsers","user","filterUsers","userId","updatedUsers","updatedUser","stringify","setItem","saveToStorage","disabled"],"sourceRoot":""}